{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","Components/Api/Api.js","reportWebVitals.js","index.js"],"names":["Searchbar","handlerOnSubmit","useState","request","setRequest","className","onSubmit","e","preventDefault","type","name","autocomplete","autofocus","placeholder","value","onChange","target","ImageGalleryItem","images","handlerOnClick","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGalery","Spinner","color","height","width","Component","Button","showMore","Modal","img","cl","document","addEventListener","App","setimages","total","setTotal","page","setPage","selectedImage","setSelectedImage","setAlt","handlerOnClosedModal","getAttribute","keyCode","useEffect","fetch","then","response","ok","json","data","fetchImages","prev","hits","flat","totalHits","window","scrollTo","top","documentElement","scrollHeight","behavior","newRequest","length","link","clMod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b973abba.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const Searchbar = ({ handlerOnSubmit }) => {\r\n  const [request, setRequest] = useState('home');\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setRequest(value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    handlerOnSubmit(request);\r\n    setRequest('');\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          name=\"request\"\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autofocus\r\n          placeholder=\"Search images and photos\"\r\n          value={request}\r\n          onChange={onChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n","export const ImageGalleryItem = ({ images, handlerOnClick }) =>\r\n  images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n    <li\r\n      key={id}\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => handlerOnClick(largeImageURL, tags)}\r\n    >\r\n      <img\r\n        id={id}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        largeImageURL={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  ));\r\n","import { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport const ImageGalery = ({ images, handlerOnClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem images={images} handlerOnClick={handlerOnClick} />\r\n    </ul>\r\n  );\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport './loader.css';\r\n\r\nexport class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className=\"spinner\"\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import './Button.css';\r\nexport const Button = ({ showMore }) => (\r\n  <button className=\"button\" onClick={showMore}>\r\n    Load more\r\n  </button>\r\n);\r\n","import './modal.css';\r\nexport const Modal = ({ img, alt, cl }) => {\r\n  document.addEventListener('keydown', cl);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={cl}>\r\n      <div className=\"Modal\">\r\n        <img className=\"img\" src={img} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { Searchbar } from './Components/Searchbar/Searchbar';\nimport { fetchImages } from './Components/Api/Api.js';\nimport { ImageGalery } from './Components/ImageGallery/ImageGallery';\nimport { Spinner } from './Components/Loader/Loader';\nimport { Button } from './Components/Button/Button';\nimport { Modal } from './Components/Modal/Modal';\n\nexport const App = () => {\n  const [request, setRequest] = useState('bird');\n  const [images, setimages] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [alt, setAlt] = useState(null);\n\n  const handlerOnSubmit = newRequest => {\n    setRequest(newRequest);\n    setPage(1);\n    setimages([]);\n  };\n  const handlerOnClick = (link, tags) => {\n    setSelectedImage(link);\n    setAlt(tags);\n  };\n  const handlerOnClosedModal = e => {\n    if (e.target.getAttribute('class') === 'Overlay' || e.keyCode === 27) {\n      setSelectedImage(null);\n      setAlt(null);\n    }\n  };\n  const showMore = () => {\n    setPage(prev => prev + 1);\n  };\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  useEffect(() => {\n    fetchImages(request, page).then(data => {\n      setimages(prev => [...prev, data.hits].flat());\n      setTotal(data.totalHits);\n      scroll();\n    });\n  }, [page, request]);\n\n  return (\n    <div className=\"App-header\">\n      {selectedImage && (\n        <Modal img={selectedImage} alt={alt} cl={handlerOnClosedModal} />\n      )}\n\n      <Searchbar handlerOnSubmit={handlerOnSubmit} />\n      {images.length === 0 && <Spinner />}\n\n      <ImageGalery\n        images={images}\n        handlerOnClick={handlerOnClick}\n        clMod={handlerOnClosedModal}\n      />\n      {total > 12 && <Button showMore={showMore} />}\n    </div>\n  );\n};\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst key = '21948023-054fe05cd08d0a129e2d1c0a6';\r\n\r\nexport const fetchImages = (request, page) => {\r\n  return fetch(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${request}&page=${page}&per_page=12&key=${key}`,\r\n  )\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      page++;\r\n      return data;\r\n    });\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}